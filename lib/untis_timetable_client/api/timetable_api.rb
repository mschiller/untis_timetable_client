=begin
#WebUntis Timetable API Documentation

#*WebUntis timetable API*  Gets from WebUntis all data needed to display a timetable. Can filter for by resource (student, teacher, room, class or lesson). Can include all periods or only changed periods. Includes current state and changes from the scheduling timetable.   How to get the data of the current timetable:  Request data providing: - a start and end date - a filter criteria     - a resource id(s) for whom to view the timetable: student/teacher/room/class/lesson/period     - a timestamp for changes only   From the response: 1. Take all periods with PeriodStatusEnum values except CANCELLED. 2. For each of these periods take all resources with ResourceStatusEnum values of REGULAR and ADDED. 3. These resources are referenced by id in the periods. 4. Look up the resource in MasterDataDto. 5. Use displayName of the resource.  Display the resulting data in a suitable format.   Version history: - v1    2022-05     stw         Initial version  - v2    2023-02     stw         multiple ids as filter parameter / period as filter parameter / text fields in PeriodDto / deprecation of detailsUrl /                                 flag for online period / related period id for moved periods / period is modified when assigned students change - v3    2023-07     stw         Error handling now identical to other Untis APIs

The version of the OpenAPI document: 2.0.0
Contact: support@untis.at
Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'cgi'

module UntisTimetableClient
  class TimetableApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieves a timetable (within the bounds of a single school year).
    # @param start [Time] Start of requested timetable in ISO 8601 format. Must be in the same school year as end.
    # @param _end [Time] End of requested timetable in ISO 8601 format. Must be in the same school year as start.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit Pagination size. No limit &#x3D; 0. Limit the number of periods that are returned, starting with the earliest period. Can be used to get the next N periods. (default to 0)
    # @option opts [Integer] :offset Pagination offset. Skip the first N results. First result &#x3D; 1. No pagination &#x3D; 0. (default to 0)
    # @option opts [Boolean] :include_students Include the students of a periods in the response.
    # @option opts [Time] :date_last_modified_after Return only periods changed since this timestamp in ISO 8601 format.  Note: A change of student assignment to a studentgroup does not change the period.
    # @option opts [Integer] :lesson WebUntis entity ID of a lesson.
    # @option opts [Integer] :_class WebUntis entity ID of a class.
    # @option opts [Integer] :room WebUntis entity ID of a room.
    # @option opts [Integer] :student WebUntis entity ID of a student.
    # @option opts [Integer] :teacher WebUntis entity ID of a teacher.
    # @option opts [String] :lesson_ext External entity ID of a lesson.
    # @option opts [String] :class_ext External entity ID of a class.
    # @option opts [String] :room_ext External entity ID of a room.
    # @option opts [String] :student_ext External entity ID of a student.
    # @option opts [String] :teacher_ext External entity ID of a teacher.
    # @return [TimetableDto]
    def get_timetable(start, _end, opts = {})
      data, _status_code, _headers = get_timetable_with_http_info(start, _end, opts)
      data
    end

    # Retrieves a timetable (within the bounds of a single school year).
    # @param start [Time] Start of requested timetable in ISO 8601 format. Must be in the same school year as end.
    # @param _end [Time] End of requested timetable in ISO 8601 format. Must be in the same school year as start.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit Pagination size. No limit &#x3D; 0. Limit the number of periods that are returned, starting with the earliest period. Can be used to get the next N periods. (default to 0)
    # @option opts [Integer] :offset Pagination offset. Skip the first N results. First result &#x3D; 1. No pagination &#x3D; 0. (default to 0)
    # @option opts [Boolean] :include_students Include the students of a periods in the response.
    # @option opts [Time] :date_last_modified_after Return only periods changed since this timestamp in ISO 8601 format.  Note: A change of student assignment to a studentgroup does not change the period.
    # @option opts [Integer] :lesson WebUntis entity ID of a lesson.
    # @option opts [Integer] :_class WebUntis entity ID of a class.
    # @option opts [Integer] :room WebUntis entity ID of a room.
    # @option opts [Integer] :student WebUntis entity ID of a student.
    # @option opts [Integer] :teacher WebUntis entity ID of a teacher.
    # @option opts [String] :lesson_ext External entity ID of a lesson.
    # @option opts [String] :class_ext External entity ID of a class.
    # @option opts [String] :room_ext External entity ID of a room.
    # @option opts [String] :student_ext External entity ID of a student.
    # @option opts [String] :teacher_ext External entity ID of a teacher.
    # @return [Array<(TimetableDto, Integer, Hash)>] TimetableDto data, response status code and response headers
    def get_timetable_with_http_info(start, _end, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TimetableApi.get_timetable ...'
      end
      # verify the required parameter 'start' is set
      if @api_client.config.client_side_validation && start.nil?
        fail ArgumentError, "Missing the required parameter 'start' when calling TimetableApi.get_timetable"
      end
      # verify the required parameter '_end' is set
      if @api_client.config.client_side_validation && _end.nil?
        fail ArgumentError, "Missing the required parameter '_end' when calling TimetableApi.get_timetable"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 0
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling TimetableApi.get_timetable, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'offset'].nil? && opts[:'offset'] < 0
        fail ArgumentError, 'invalid value for "opts[:"offset"]" when calling TimetableApi.get_timetable, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'lesson_ext'].nil? && opts[:'lesson_ext'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"lesson_ext"]" when calling TimetableApi.get_timetable, the character length must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'class_ext'].nil? && opts[:'class_ext'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"class_ext"]" when calling TimetableApi.get_timetable, the character length must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'room_ext'].nil? && opts[:'room_ext'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"room_ext"]" when calling TimetableApi.get_timetable, the character length must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'student_ext'].nil? && opts[:'student_ext'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"student_ext"]" when calling TimetableApi.get_timetable, the character length must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'teacher_ext'].nil? && opts[:'teacher_ext'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"teacher_ext"]" when calling TimetableApi.get_timetable, the character length must be smaller than or equal to 100.'
      end

      # resource path
      local_var_path = '/api/rest/extern/v1/timetable'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'start'] = start
      query_params[:'end'] = _end
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'includeStudents'] = opts[:'include_students'] if !opts[:'include_students'].nil?
      query_params[:'dateLastModifiedAfter'] = opts[:'date_last_modified_after'] if !opts[:'date_last_modified_after'].nil?
      query_params[:'lesson'] = opts[:'lesson'] if !opts[:'lesson'].nil?
      query_params[:'class'] = opts[:'_class'] if !opts[:'_class'].nil?
      query_params[:'room'] = opts[:'room'] if !opts[:'room'].nil?
      query_params[:'student'] = opts[:'student'] if !opts[:'student'].nil?
      query_params[:'teacher'] = opts[:'teacher'] if !opts[:'teacher'].nil?
      query_params[:'lesson_ext'] = opts[:'lesson_ext'] if !opts[:'lesson_ext'].nil?
      query_params[:'class_ext'] = opts[:'class_ext'] if !opts[:'class_ext'].nil?
      query_params[:'room_ext'] = opts[:'room_ext'] if !opts[:'room_ext'].nil?
      query_params[:'student_ext'] = opts[:'student_ext'] if !opts[:'student_ext'].nil?
      query_params[:'teacher_ext'] = opts[:'teacher_ext'] if !opts[:'teacher_ext'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'TimetableDto'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"TimetableApi.get_timetable",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TimetableApi#get_timetable\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieves a timetable (within the bounds of a single school year).
    # @param start [Time] Start of requested timetable in ISO 8601 format. Must be in the same school year as end.
    # @param _end [Time] End of requested timetable in ISO 8601 format. Must be in the same school year as start.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit Pagination size. No limit &#x3D; 0. Limit the number of periods that are returned, starting with the earliest period. Can be used to get the next N periods. (default to 0)
    # @option opts [Integer] :offset Pagination offset. Skip the first N results. First result &#x3D; 1. No pagination &#x3D; 0. (default to 0)
    # @option opts [Boolean] :include_students Include the students of a periods in the response.
    # @option opts [Time] :date_last_modified_after Return only periods changed since this timestamp in ISO 8601 format.  Note: A change of student assignment to a studentgroup does not change the period.
    # @option opts [Array<Integer>] :period WebUntis entity ID of a period
    # @option opts [Array<Integer>] :lesson WebUntis entity ID of a lesson.
    # @option opts [Array<Integer>] :_class WebUntis entity ID of a class.
    # @option opts [Array<Integer>] :room WebUntis entity ID of a room.
    # @option opts [Array<Integer>] :student WebUntis entity ID of a student.
    # @option opts [Array<Integer>] :teacher WebUntis entity ID of a teacher.
    # @option opts [Array<String>] :lesson_ext External entity ID of a lesson.
    # @option opts [Array<String>] :class_ext External entity ID of a class.
    # @option opts [Array<String>] :room_ext External entity ID of a room.
    # @option opts [Array<String>] :student_ext External entity ID of a student.
    # @option opts [Array<String>] :teacher_ext External entity ID of a teacher.
    # @return [TimetableDto]
    def get_timetable_v2(start, _end, opts = {})
      data, _status_code, _headers = get_timetable_v2_with_http_info(start, _end, opts)
      data
    end

    # Retrieves a timetable (within the bounds of a single school year).
    # @param start [Time] Start of requested timetable in ISO 8601 format. Must be in the same school year as end.
    # @param _end [Time] End of requested timetable in ISO 8601 format. Must be in the same school year as start.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit Pagination size. No limit &#x3D; 0. Limit the number of periods that are returned, starting with the earliest period. Can be used to get the next N periods. (default to 0)
    # @option opts [Integer] :offset Pagination offset. Skip the first N results. First result &#x3D; 1. No pagination &#x3D; 0. (default to 0)
    # @option opts [Boolean] :include_students Include the students of a periods in the response.
    # @option opts [Time] :date_last_modified_after Return only periods changed since this timestamp in ISO 8601 format.  Note: A change of student assignment to a studentgroup does not change the period.
    # @option opts [Array<Integer>] :period WebUntis entity ID of a period
    # @option opts [Array<Integer>] :lesson WebUntis entity ID of a lesson.
    # @option opts [Array<Integer>] :_class WebUntis entity ID of a class.
    # @option opts [Array<Integer>] :room WebUntis entity ID of a room.
    # @option opts [Array<Integer>] :student WebUntis entity ID of a student.
    # @option opts [Array<Integer>] :teacher WebUntis entity ID of a teacher.
    # @option opts [Array<String>] :lesson_ext External entity ID of a lesson.
    # @option opts [Array<String>] :class_ext External entity ID of a class.
    # @option opts [Array<String>] :room_ext External entity ID of a room.
    # @option opts [Array<String>] :student_ext External entity ID of a student.
    # @option opts [Array<String>] :teacher_ext External entity ID of a teacher.
    # @return [Array<(TimetableDto, Integer, Hash)>] TimetableDto data, response status code and response headers
    def get_timetable_v2_with_http_info(start, _end, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TimetableApi.get_timetable_v2 ...'
      end
      # verify the required parameter 'start' is set
      if @api_client.config.client_side_validation && start.nil?
        fail ArgumentError, "Missing the required parameter 'start' when calling TimetableApi.get_timetable_v2"
      end
      # verify the required parameter '_end' is set
      if @api_client.config.client_side_validation && _end.nil?
        fail ArgumentError, "Missing the required parameter '_end' when calling TimetableApi.get_timetable_v2"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 0
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling TimetableApi.get_timetable_v2, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'offset'].nil? && opts[:'offset'] < 0
        fail ArgumentError, 'invalid value for "opts[:"offset"]" when calling TimetableApi.get_timetable_v2, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'period'].nil? && opts[:'period'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"period"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'period'].nil? && opts[:'period'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"period"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'lesson'].nil? && opts[:'lesson'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"lesson"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'lesson'].nil? && opts[:'lesson'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"lesson"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'_class'].nil? && opts[:'_class'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"_class"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'_class'].nil? && opts[:'_class'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"_class"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'room'].nil? && opts[:'room'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"room"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'room'].nil? && opts[:'room'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"room"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'student'].nil? && opts[:'student'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"student"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'student'].nil? && opts[:'student'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"student"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'teacher'].nil? && opts[:'teacher'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"teacher"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'teacher'].nil? && opts[:'teacher'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"teacher"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'lesson_ext'].nil? && opts[:'lesson_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"lesson_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'lesson_ext'].nil? && opts[:'lesson_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"lesson_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'class_ext'].nil? && opts[:'class_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"class_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'class_ext'].nil? && opts[:'class_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"class_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'room_ext'].nil? && opts[:'room_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"room_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'room_ext'].nil? && opts[:'room_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"room_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'student_ext'].nil? && opts[:'student_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"student_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'student_ext'].nil? && opts[:'student_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"student_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'teacher_ext'].nil? && opts[:'teacher_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"teacher_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'teacher_ext'].nil? && opts[:'teacher_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"teacher_ext"]" when calling TimetableApi.get_timetable_v2, number of items must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/api/rest/extern/v2/timetable'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'start'] = start
      query_params[:'end'] = _end
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'includeStudents'] = opts[:'include_students'] if !opts[:'include_students'].nil?
      query_params[:'dateLastModifiedAfter'] = opts[:'date_last_modified_after'] if !opts[:'date_last_modified_after'].nil?
      query_params[:'period'] = @api_client.build_collection_param(opts[:'period'], :multi) if !opts[:'period'].nil?
      query_params[:'lesson'] = @api_client.build_collection_param(opts[:'lesson'], :multi) if !opts[:'lesson'].nil?
      query_params[:'class'] = @api_client.build_collection_param(opts[:'_class'], :multi) if !opts[:'_class'].nil?
      query_params[:'room'] = @api_client.build_collection_param(opts[:'room'], :multi) if !opts[:'room'].nil?
      query_params[:'student'] = @api_client.build_collection_param(opts[:'student'], :multi) if !opts[:'student'].nil?
      query_params[:'teacher'] = @api_client.build_collection_param(opts[:'teacher'], :multi) if !opts[:'teacher'].nil?
      query_params[:'lesson_ext'] = @api_client.build_collection_param(opts[:'lesson_ext'], :multi) if !opts[:'lesson_ext'].nil?
      query_params[:'class_ext'] = @api_client.build_collection_param(opts[:'class_ext'], :multi) if !opts[:'class_ext'].nil?
      query_params[:'room_ext'] = @api_client.build_collection_param(opts[:'room_ext'], :multi) if !opts[:'room_ext'].nil?
      query_params[:'student_ext'] = @api_client.build_collection_param(opts[:'student_ext'], :multi) if !opts[:'student_ext'].nil?
      query_params[:'teacher_ext'] = @api_client.build_collection_param(opts[:'teacher_ext'], :multi) if !opts[:'teacher_ext'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'TimetableDto'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"TimetableApi.get_timetable_v2",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TimetableApi#get_timetable_v2\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieves a timetable (within the bounds of a single school year).
    # @param start [Time] Start of requested timetable in ISO 8601 format. Must be in the same school year as end.
    # @param _end [Time] End of requested timetable in ISO 8601 format. Must be in the same school year as start.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit Pagination size. No limit &#x3D; 0. Limit the number of periods that are returned, starting with the earliest period. Can be used to get the next N periods. (default to 0)
    # @option opts [Integer] :offset Pagination offset. Skip the first N results. First result &#x3D; 1. No pagination &#x3D; 0. (default to 0)
    # @option opts [Boolean] :include_students Include the students of a periods in the response.
    # @option opts [Time] :date_last_modified_after Return only periods changed since this timestamp in ISO 8601 format.  Note: A change of student assignment to a studentgroup does not change the period.
    # @option opts [Array<Integer>] :period WebUntis entity ID of a period
    # @option opts [Array<Integer>] :lesson WebUntis entity ID of a lesson.
    # @option opts [Array<Integer>] :_class WebUntis entity ID of a class.
    # @option opts [Array<Integer>] :room WebUntis entity ID of a room.
    # @option opts [Array<Integer>] :student WebUntis entity ID of a student.
    # @option opts [Array<Integer>] :teacher WebUntis entity ID of a teacher.
    # @option opts [Array<String>] :lesson_ext External entity ID of a lesson.
    # @option opts [Array<String>] :class_ext External entity ID of a class.
    # @option opts [Array<String>] :room_ext External entity ID of a room.
    # @option opts [Array<String>] :student_ext External entity ID of a student.
    # @option opts [Array<String>] :teacher_ext External entity ID of a teacher.
    # @return [TimetableDto]
    def get_timetable_v3(start, _end, opts = {})
      data, _status_code, _headers = get_timetable_v3_with_http_info(start, _end, opts)
      data
    end

    # Retrieves a timetable (within the bounds of a single school year).
    # @param start [Time] Start of requested timetable in ISO 8601 format. Must be in the same school year as end.
    # @param _end [Time] End of requested timetable in ISO 8601 format. Must be in the same school year as start.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit Pagination size. No limit &#x3D; 0. Limit the number of periods that are returned, starting with the earliest period. Can be used to get the next N periods. (default to 0)
    # @option opts [Integer] :offset Pagination offset. Skip the first N results. First result &#x3D; 1. No pagination &#x3D; 0. (default to 0)
    # @option opts [Boolean] :include_students Include the students of a periods in the response.
    # @option opts [Time] :date_last_modified_after Return only periods changed since this timestamp in ISO 8601 format.  Note: A change of student assignment to a studentgroup does not change the period.
    # @option opts [Array<Integer>] :period WebUntis entity ID of a period
    # @option opts [Array<Integer>] :lesson WebUntis entity ID of a lesson.
    # @option opts [Array<Integer>] :_class WebUntis entity ID of a class.
    # @option opts [Array<Integer>] :room WebUntis entity ID of a room.
    # @option opts [Array<Integer>] :student WebUntis entity ID of a student.
    # @option opts [Array<Integer>] :teacher WebUntis entity ID of a teacher.
    # @option opts [Array<String>] :lesson_ext External entity ID of a lesson.
    # @option opts [Array<String>] :class_ext External entity ID of a class.
    # @option opts [Array<String>] :room_ext External entity ID of a room.
    # @option opts [Array<String>] :student_ext External entity ID of a student.
    # @option opts [Array<String>] :teacher_ext External entity ID of a teacher.
    # @return [Array<(TimetableDto, Integer, Hash)>] TimetableDto data, response status code and response headers
    def get_timetable_v3_with_http_info(start, _end, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TimetableApi.get_timetable_v3 ...'
      end
      # verify the required parameter 'start' is set
      if @api_client.config.client_side_validation && start.nil?
        fail ArgumentError, "Missing the required parameter 'start' when calling TimetableApi.get_timetable_v3"
      end
      # verify the required parameter '_end' is set
      if @api_client.config.client_side_validation && _end.nil?
        fail ArgumentError, "Missing the required parameter '_end' when calling TimetableApi.get_timetable_v3"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 0
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling TimetableApi.get_timetable_v3, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'offset'].nil? && opts[:'offset'] < 0
        fail ArgumentError, 'invalid value for "opts[:"offset"]" when calling TimetableApi.get_timetable_v3, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'period'].nil? && opts[:'period'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"period"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'period'].nil? && opts[:'period'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"period"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'lesson'].nil? && opts[:'lesson'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"lesson"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'lesson'].nil? && opts[:'lesson'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"lesson"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'_class'].nil? && opts[:'_class'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"_class"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'_class'].nil? && opts[:'_class'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"_class"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'room'].nil? && opts[:'room'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"room"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'room'].nil? && opts[:'room'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"room"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'student'].nil? && opts[:'student'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"student"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'student'].nil? && opts[:'student'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"student"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'teacher'].nil? && opts[:'teacher'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"teacher"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'teacher'].nil? && opts[:'teacher'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"teacher"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'lesson_ext'].nil? && opts[:'lesson_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"lesson_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'lesson_ext'].nil? && opts[:'lesson_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"lesson_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'class_ext'].nil? && opts[:'class_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"class_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'class_ext'].nil? && opts[:'class_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"class_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'room_ext'].nil? && opts[:'room_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"room_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'room_ext'].nil? && opts[:'room_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"room_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'student_ext'].nil? && opts[:'student_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"student_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'student_ext'].nil? && opts[:'student_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"student_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'teacher_ext'].nil? && opts[:'teacher_ext'].length > 50
        fail ArgumentError, 'invalid value for "opts[:"teacher_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be less than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'teacher_ext'].nil? && opts[:'teacher_ext'].length < 0
        fail ArgumentError, 'invalid value for "opts[:"teacher_ext"]" when calling TimetableApi.get_timetable_v3, number of items must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/api/rest/extern/v3/timetable'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'start'] = start
      query_params[:'end'] = _end
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'includeStudents'] = opts[:'include_students'] if !opts[:'include_students'].nil?
      query_params[:'dateLastModifiedAfter'] = opts[:'date_last_modified_after'] if !opts[:'date_last_modified_after'].nil?
      query_params[:'period'] = @api_client.build_collection_param(opts[:'period'], :multi) if !opts[:'period'].nil?
      query_params[:'lesson'] = @api_client.build_collection_param(opts[:'lesson'], :multi) if !opts[:'lesson'].nil?
      query_params[:'class'] = @api_client.build_collection_param(opts[:'_class'], :multi) if !opts[:'_class'].nil?
      query_params[:'room'] = @api_client.build_collection_param(opts[:'room'], :multi) if !opts[:'room'].nil?
      query_params[:'student'] = @api_client.build_collection_param(opts[:'student'], :multi) if !opts[:'student'].nil?
      query_params[:'teacher'] = @api_client.build_collection_param(opts[:'teacher'], :multi) if !opts[:'teacher'].nil?
      query_params[:'lesson_ext'] = @api_client.build_collection_param(opts[:'lesson_ext'], :multi) if !opts[:'lesson_ext'].nil?
      query_params[:'class_ext'] = @api_client.build_collection_param(opts[:'class_ext'], :multi) if !opts[:'class_ext'].nil?
      query_params[:'room_ext'] = @api_client.build_collection_param(opts[:'room_ext'], :multi) if !opts[:'room_ext'].nil?
      query_params[:'student_ext'] = @api_client.build_collection_param(opts[:'student_ext'], :multi) if !opts[:'student_ext'].nil?
      query_params[:'teacher_ext'] = @api_client.build_collection_param(opts[:'teacher_ext'], :multi) if !opts[:'teacher_ext'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8', 'application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'TimetableDto'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"TimetableApi.get_timetable_v3",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TimetableApi#get_timetable_v3\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
